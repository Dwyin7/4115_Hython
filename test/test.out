

Parsed program: 

Import -> lib: x

Function -> Output Type: P_int, Name: test_primitive, Formals: [(P_int a), (P_float b), (P_char c)],
Body: [
Expr (Bind(P_int, x));
Expr (Assign(x, Binop(Binop(Id(a), +, Id(b)), +, Id(c))));
Return (Id(x))
]
Function -> Output Type: P_int, Name: test_matrix, Formals: [(P_int x), (P_float y), (P_char z)],
Body: [
Expr (Bind(P_int, a));
Expr (BindAndAssign (T_int b, Assign exprs Tensor([Int(1), Int(2)])));
Expr (BindAndAssign (T_int B, Assign exprs Tensor([Tensor([Int(1), Int(2), Int(3)]), Tensor([Int(4), Int(5), Int(6)])])));
Expr (BindAndAssign (T_int A, Assign exprs Tensor([Tensor([]), Tensor([]), Tensor([]), Tensor([])])));
Expr (BindAndAssign (P_int c, Assign exprs Int(12)));
Expr (Assign(a, Binop(Binop(Id(x), +, Id(y)), +, Id(z))));
Return (Id(a))
]


