; ModuleID = 'hython'
source_filename = "hython"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

define i32 @main() {
entry:
  %test_while_loop_result = call i32 @test_while_loop()
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i32 0)
  ret i32 1
}

define i32 @test_while_loop() {
entry:
  %i = alloca i32, align 4
  store i32 10, i32* %i, align 4
  %acc = alloca i32, align 4
  store i32 0, i32* %acc, align 4
  br label %while

while:                                            ; preds = %while_end, %entry
  %i1 = load i32, i32* %i, align 4
  %tmp = icmp ne i32 %i1, 0
  br i1 %tmp, label %while_body, label %while_end13

while_body:                                       ; preds = %while
  %i2 = load i32, i32* %i, align 4
  %tmp3 = sub i32 %i2, 1
  store i32 %tmp3, i32* %i, align 4
  %j = alloca i32, align 4
  store i32 10, i32* %j, align 4
  br label %while4

while4:                                           ; preds = %while_body7, %while_body
  %j5 = load i32, i32* %j, align 4
  %tmp6 = icmp ne i32 %j5, 0
  br i1 %tmp6, label %while_body7, label %while_end

while_body7:                                      ; preds = %while4
  %j8 = load i32, i32* %j, align 4
  %tmp9 = sub i32 %j8, 1
  store i32 %tmp9, i32* %j, align 4
  %acc10 = load i32, i32* %acc, align 4
  %tmp11 = add i32 %acc10, 1
  store i32 %tmp11, i32* %acc, align 4
  %acc12 = load i32, i32* %acc, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %acc12)
  br label %while4

while_end:                                        ; preds = %while4
  br label %while

while_end13:                                      ; preds = %while
  %acc14 = load i32, i32* %acc, align 4
  %printf15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %acc14)
  ret i32 1
}

declare i32 @printf(i8*, ...)
